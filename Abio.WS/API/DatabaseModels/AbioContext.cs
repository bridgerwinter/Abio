// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Abio.WS.API.DatabaseModels;

public partial class AbioContext : DbContext
{
    public AbioContext(DbContextOptions<AbioContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Building> Buildings { get; set; }

    public virtual DbSet<BuildingsLevel> BuildingsLevels { get; set; }

    public virtual DbSet<ConstructedBuilding> ConstructedBuildings { get; set; }

    public virtual DbSet<Faction> Factions { get; set; }

    public virtual DbSet<Friend> Friends { get; set; }

    public virtual DbSet<HiredLeader> HiredLeaders { get; set; }

    public virtual DbSet<HiredLeaderStat> HiredLeaderStats { get; set; }

    public virtual DbSet<HiredUnit> HiredUnits { get; set; }

    public virtual DbSet<HiredUnitsStat> HiredUnitsStats { get; set; }

    public virtual DbSet<Item> Items { get; set; }

    public virtual DbSet<ItemInventory> ItemInventories { get; set; }

    public virtual DbSet<Market> Markets { get; set; }

    public virtual DbSet<MarketListing> MarketListings { get; set; }

    public virtual DbSet<Player> Players { get; set; }

    public virtual DbSet<ResearchedTechnology> ResearchedTechnologies { get; set; }

    public virtual DbSet<Resource> Resources { get; set; }

    public virtual DbSet<ResourceInventory> ResourceInventories { get; set; }

    public virtual DbSet<Technology> Technologies { get; set; }

    public virtual DbSet<Unit> Units { get; set; }

    public virtual DbSet<UnitGroup> UnitGroups { get; set; }

    public virtual DbSet<UnitLevel> UnitLevels { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<UserCitiesLeader> UserCitiesLeaders { get; set; }

    public virtual DbSet<UserCity> UserCities { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Building>(entity =>
        {
            entity.HasKey(e => e.BuildingId).HasName("PK__Building__5463CDC493E51095");

            entity.HasOne(d => d.Faction).WithMany(p => p.Buildings).HasConstraintName("FK__Buildings__Facti__6B0FDBE9");
        });

        modelBuilder.Entity<BuildingsLevel>(entity =>
        {
            entity.HasKey(e => e.BuildingLevelId).HasName("PK__Building__17A713DC95E4A195");
        });

        modelBuilder.Entity<ConstructedBuilding>(entity =>
        {
            entity.HasKey(e => e.ConstructuredBuildingId).HasName("PK__Construc__1DDC1A3C8FCE7AD5");

            entity.Property(e => e.ConstructuredBuildingId).ValueGeneratedNever();
            entity.Property(e => e.CreatedAt)
                .IsRowVersion()
                .IsConcurrencyToken();

            entity.HasOne(d => d.Building).WithMany(p => p.ConstructedBuildings).HasConstraintName("FK__Construct__Build__59E54FE7");

            entity.HasOne(d => d.BuildingLevelNavigation).WithMany(p => p.ConstructedBuildings).HasConstraintName("FK__Construct__Build__5BCD9859");

            entity.HasOne(d => d.User).WithMany(p => p.ConstructedBuildings).HasConstraintName("FK__Construct__UserI__21D600EE");
        });

        modelBuilder.Entity<Faction>(entity =>
        {
            entity.HasKey(e => e.FactionId).HasName("PK__Factions__9321345AD3F337AF");
        });

        modelBuilder.Entity<Friend>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Friends__1788CC4C264336DB");

            entity.Property(e => e.UserId).ValueGeneratedNever();

            entity.HasOne(d => d.FriendsWithNavigation).WithMany(p => p.Friends).HasConstraintName("FK__Friends__Friends__025D5595");
        });

        modelBuilder.Entity<HiredLeader>(entity =>
        {
            entity.HasKey(e => e.HiredLeaderId).HasName("PK__HiredLea__4982B2BD1DC437DC");

            entity.Property(e => e.HiredLeaderId).ValueGeneratedNever();
            entity.Property(e => e.CreatedAt)
                .IsRowVersion()
                .IsConcurrencyToken();

            entity.HasOne(d => d.User).WithMany(p => p.HiredLeaders).HasConstraintName("FK__HiredLead__UserI__2882FE7D");
        });

        modelBuilder.Entity<HiredLeaderStat>(entity =>
        {
            entity.HasKey(e => e.HiredLeaderStatsId).HasName("PK__HiredLea__EE52A8FCB630970C");

            entity.Property(e => e.HiredLeaderStatsId).ValueGeneratedNever();

            entity.HasOne(d => d.HiredLeader).WithMany(p => p.HiredLeaderStats).HasConstraintName("FK__HiredLead__Hired__1E05700A");
        });

        modelBuilder.Entity<HiredUnit>(entity =>
        {
            entity.HasKey(e => e.HiredUnitId).HasName("PK__HiredUni__68A545150BC81DB9");

            entity.Property(e => e.HiredUnitId).ValueGeneratedNever();
            entity.Property(e => e.CreatedAt)
                .IsRowVersion()
                .IsConcurrencyToken();

            entity.HasOne(d => d.HiredLeader).WithMany(p => p.HiredUnits).HasConstraintName("FK__HiredUnit__Hired__1C1D2798");

            entity.HasOne(d => d.Unit).WithMany(p => p.HiredUnits).HasConstraintName("FK__HiredUnit__UnitI__5F9E293D");

            entity.HasOne(d => d.UnitLevelNavigation).WithMany(p => p.HiredUnits).HasConstraintName("FK__HiredUnit__UnitL__60924D76");

            entity.HasOne(d => d.User).WithMany(p => p.HiredUnits).HasConstraintName("FK__HiredUnit__UserI__25A691D2");
        });

        modelBuilder.Entity<HiredUnitsStat>(entity =>
        {
            entity.HasKey(e => e.HiredUnitStatsId).HasName("PK__HiredUni__8E0F96A4F0D96888");

            entity.Property(e => e.HiredUnitStatsId).ValueGeneratedNever();

            entity.HasOne(d => d.HiredUnit).WithMany(p => p.HiredUnitsStats).HasConstraintName("FK__HiredUnit__Hired__1D114BD1");
        });

        modelBuilder.Entity<Item>(entity =>
        {
            entity.HasKey(e => e.ItemId).HasName("PK__Items__727E838BAE1DE2A0");

            entity.Property(e => e.ItemId).ValueGeneratedNever();
        });

        modelBuilder.Entity<ItemInventory>(entity =>
        {
            entity.HasKey(e => e.ItemInventoryId).HasName("PK__ItemInve__FCBE0BEBBFD71600");

            entity.Property(e => e.ItemInventoryId).ValueGeneratedNever();

            entity.HasOne(d => d.Item).WithMany(p => p.ItemInventories).HasConstraintName("FK__ItemInven__ItemI__004002F9");

            entity.HasOne(d => d.User).WithMany(p => p.ItemInventories).HasConstraintName("FK__ItemInven__UserI__297722B6");
        });

        modelBuilder.Entity<Market>(entity =>
        {
            entity.HasKey(e => e.MarketId).HasName("PK__Markets__74B186AFFB3D2CF7");

            entity.Property(e => e.MarketId).ValueGeneratedNever();
        });

        modelBuilder.Entity<MarketListing>(entity =>
        {
            entity.HasKey(e => e.ListingId).HasName("PK__MarketLi__BF3EBED02DA6EE18");

            entity.Property(e => e.ListingId).ValueGeneratedNever();

            entity.HasOne(d => d.Item).WithMany(p => p.MarketListings).HasConstraintName("FK__MarketLis__ItemI__04459E07");

            entity.HasOne(d => d.ItemInventory).WithMany(p => p.MarketListings).HasConstraintName("FK__MarketLis__ItemI__0539C240");

            entity.HasOne(d => d.Market).WithMany(p => p.MarketListings).HasConstraintName("FK__MarketLis__Marke__062DE679");

            entity.HasOne(d => d.User).WithMany(p => p.MarketListings).HasConstraintName("FK__MarketLis__UserI__035179CE");
        });

        modelBuilder.Entity<Player>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Players__1788CC4C0B0AFC99");

            entity.Property(e => e.UserId).ValueGeneratedNever();

            entity.HasOne(d => d.User).WithOne(p => p.Player)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Players__UserId__1758727B");
        });

        modelBuilder.Entity<ResearchedTechnology>(entity =>
        {
            entity.HasKey(e => e.ResearchedTechnologyId).HasName("PK__Research__927E67F603C48C3B");

            entity.Property(e => e.ResearchedTechnologyId).ValueGeneratedNever();
            entity.Property(e => e.CreatedAt)
                .IsRowVersion()
                .IsConcurrencyToken();

            entity.HasOne(d => d.Technology).WithMany(p => p.ResearchedTechnologies).HasConstraintName("FK__Researche__Techn__5CC1BC92");

            entity.HasOne(d => d.User).WithMany(p => p.ResearchedTechnologies).HasConstraintName("FK__Researche__UserI__24B26D99");
        });

        modelBuilder.Entity<Resource>(entity =>
        {
            entity.HasKey(e => e.ResourceId).HasName("PK__Resource__4ED1816F5AA9E4A3");
        });

        modelBuilder.Entity<ResourceInventory>(entity =>
        {
            entity.HasKey(e => e.ResourceInventoryId).HasName("PK__Resource__CEE0280290546E3E");

            entity.Property(e => e.ResourceInventoryId).ValueGeneratedNever();

            entity.HasOne(d => d.Resource).WithMany(p => p.ResourceInventories).HasConstraintName("FK__ResourceI__Resou__65570293");

            entity.HasOne(d => d.User).WithMany(p => p.ResourceInventories).HasConstraintName("FK__ResourceI__UserI__00750D23");
        });

        modelBuilder.Entity<Technology>(entity =>
        {
            entity.HasKey(e => e.TechnologyId).HasName("PK__Technolo__705701582BCEA478");
        });

        modelBuilder.Entity<Unit>(entity =>
        {
            entity.HasKey(e => e.UnitId).HasName("PK__Units__44F5ECB547EAA1A2");

            entity.HasOne(d => d.Faction).WithMany(p => p.Units).HasConstraintName("FK__Units__FactionId__6C040022");
        });

        modelBuilder.Entity<UnitGroup>(entity =>
        {
            entity.HasKey(e => e.UnitGroupsId).HasName("PK__UnitGrou__DD92915A99D47351");

            entity.Property(e => e.UnitGroupsId).ValueGeneratedNever();

            entity.HasOne(d => d.HiredLeader).WithMany(p => p.UnitGroups).HasConstraintName("FK__UnitGroup__Hired__1FEDB87C");

            entity.HasOne(d => d.HiredUnit).WithMany(p => p.UnitGroups).HasConstraintName("FK__UnitGroup__Hired__1EF99443");
        });

        modelBuilder.Entity<UnitLevel>(entity =>
        {
            entity.HasKey(e => e.UnitLevelId).HasName("PK__UnitLeve__4D7ADE0801C6E8B2");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Users__1788CC4CE6E3CE9D");

            entity.Property(e => e.UserId).ValueGeneratedNever();
            entity.Property(e => e.CreatedAt)
                .IsRowVersion()
                .IsConcurrencyToken();
        });

        modelBuilder.Entity<UserCitiesLeader>(entity =>
        {
            entity.HasKey(e => e.UserCityLeadersId).HasName("PK__UserCiti__A6700AE6A839D220");

            entity.Property(e => e.UserCityLeadersId).ValueGeneratedNever();

            entity.HasOne(d => d.City).WithMany(p => p.UserCitiesLeaders).HasConstraintName("FK__UserCitie__CityI__1B29035F");

            entity.HasOne(d => d.HiredLeader).WithMany(p => p.UserCitiesLeaders).HasConstraintName("FK__UserCitie__Hired__1A34DF26");

            entity.HasOne(d => d.User).WithMany(p => p.UserCitiesLeaders).HasConstraintName("FK__UserCitie__UserI__1940BAED");
        });

        modelBuilder.Entity<UserCity>(entity =>
        {
            entity.HasKey(e => e.CityId).HasName("PK__UserCiti__F2D21B76E73E4874");

            entity.Property(e => e.CityId).ValueGeneratedNever();

            entity.HasOne(d => d.User).WithMany(p => p.UserCities).HasConstraintName("FK__UserCitie__UserI__184C96B4");
        });

        OnModelCreatingGeneratedProcedures(modelBuilder);
        OnModelCreatingGeneratedFunctions(modelBuilder);
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}